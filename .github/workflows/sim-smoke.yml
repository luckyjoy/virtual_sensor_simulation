name: Run simulation for 20 sensors over HTTP for 30s

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run-sim:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt aiohttp

      - name: Start HTTP collector (background)
        run: |
          # 1. Start the server detached
          nohup python - <<'PY' > server.log 2>&1 < /dev/null &
          import asyncio
          from aiohttp import web

          async def ingest(request):
              data = await request.json()
              return web.json_response({"ok": True})

          app = web.Application()
          app.add_routes([web.post('/ingest', ingest)])
          web.run_app(app, port=8080)
          PY

          # 2. Add a robust wait/poll mechanism (Corrected for indentation)
          echo "Waiting for HTTP server to start on port 8080..."
          timeout=30 # Max wait time
          while ! python -c "
import socket
import sys
try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(('localhost', 8080))
    s.close()
    sys.exit(0)
except socket.error:
    sys.exit(1)
"
          do
              if [ $timeout -le 0 ]; then
                  echo "Error: HTTP server failed to start within the timeout."
                  cat server.log
                  exit 1
              fi
              sleep 1
              timeout=$((timeout - 1))
          done
          echo "HTTP server is ready."

      - name: Run 20 sensors over HTTP for 30s
        run: |
          mkdir -p logs
          python run_sim.py --count 20 --transport http \
            --http-url http://localhost:8080/ingest \
            --rate 2 --duration 30 --log-csv logs/out.csv

      - name: Upload CSV log artifact
        uses: actions/upload-artifact@v4
        with:
          name: sim-logs
          path: logs/out.csv